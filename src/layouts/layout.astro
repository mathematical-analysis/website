---
import "@/styles/globals.css";

import { getCollection } from "astro:content";

const posts = (await getCollection("lectures")).sort(
  (a, b) => parseInt(a.slug) - parseInt(b.slug)
);

---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Mathematical Analysis</title>
  </head>
  <body class="bg-neutral-900">
    <div class="flex h-full min-h-screen">
      <button
        id="sidebarToggle"
        class="md:hidden fixed z-30 top-4 left-4 p-2 bg-neutral-800 rounded text-neutral-50"
        aria-label="Toggle sidebar"
      >
        &#9776;
      </button>
      <aside
        id="sidebar"
        class="transform-gpu top-0 left-0 w-80! bg-neutral-950 text-neutral-50 px-6 py-12 flex flex-col space-y-8 fixed md:sticky h-screen overflow-auto ease-out transition-all duration-200 z-20 -translate-x-full md:translate-x-0 md:flex md:flex-col !basis-80"
      >
        <h1 class="text-3xl font-bold">
          <a href="/website" class="opacity-100"> Mathematical Analysis </a>
        </h1>
        <div>
          <p class="opacity-50">Fall 2024 | 1<sup>st</sup> year</p>
          <p class="opacity-50">Babeș-Bolyai University</p>
        </div>

        <div class="flex flex-col">
          <a href="https://math.ubbcluj.ro/~mihai.nechita/" target="_blank">
            <h2 class="text-xl font-bold">
              <span class="opacity-50">Lect. </span>Mihai Nechita
            </h2>
          </a>
          <p class="opacity-50">mihai.nechita(at)ubbcluj.ro</p>
        </div>

        <hr class="border-white/5" />
        <ul class="space-y-1 lg:text-lg w-full">
          {
            posts.map((post, idx) => (
              <div class="w-full">
                {idx == 6 && (
                  <hr class="border-white/5 border-dashed border-[1.5px] my-2" />
                )}
                <a href={`/website/lectures/${post.slug}/`} class="w-full">
                  <li class="hover:opacity-50 transition-opacity flex justify-between items-center duration-150 w-full">
                    <h4 class="truncate w-[80%]">{post.data.title}</h4>
                    <kbd class="bg-neutral-800 px-2.5 py-0.5 rounded-lg scale-75 font-semibold w-10 flex items-center justify-center">
                      {idx + 1}
                    </kbd>
                  </li>
                </a>
              </div>
            ))
          }
        </ul>

        <hr class="border-white/5" />
        <ul class="space-y-1">
          <li
            class="hover:opacity-50 transition-opacity flex justify-between items-center duration-150 cursor-pointer"
          >
            <a href="/website/schedule/" class="flex items-center space-x-2 w-ful">
              <span class="opacity-100">Schedule</span>
            </a>
            <kbd class="bg-neutral-800 px-2.5 py-0.5 rounded-lg scale-75">
              S
            </kbd>
          </li>

          <li
            class="hover:opacity-50 transition-opacity flex justify-between items-center duration-150 cursor-pointer"
          >
            <a href="/website/syllabus/" class="flex items-center space-x-2 w-full">
              <span class="opacity-100">Syllabus</span>
            </a>
            <kbd class="bg-neutral-800 px-2.5 py-0.5 rounded-lg scale-75">
              Y
            </kbd>
          </li>

          <li
            class="hover:opacity-50 transition-opacity flex justify-between items-center duration-150 cursor-pointer"
          >
            <a href="/website/faq/" class="flex items-center space-x-2 w-full">
              <span class="opacity-100">FAQ</span>
            </a>
            <kbd class="bg-neutral-800 px-2.5 py-0.5 rounded-lg scale-75">
              F
            </kbd>
          </li>

          <!-- <li
            class="hover:opacity-50 transition-opacity flex justify-between items-center duration-150 cursor-pointer"
          >
            <a href=/website"/syllabus/" class="flex items-center space-x-2 w-full">
              <span class="opacity-100">Exams</span>
            </a>
            <kbd class="bg-neutral-800 px-2.5 py-0.5 rounded-lg scale-75">
              E
            </kbd>
          </li> -->
        </ul>

        <hr class="border-white/5" />
        <ul class="space-y-1">
          <li>
            <a href="#" class="flex items-center space-x-2 w-full">
              <span class="opacity-100">Homework Guide</span>
            </a>
          </li>
          <li>
            <a href="#" class="flex items
            -center space-x-2">
              <span class="opacity-100">Python / Numpy Reference</span>
            </a>
          </li>
        </ul>

        <hr class="border-white/5" />
        <ul class="space-y-1">
          <li>
            <a href="#" class="flex items-center space-x-2">
              <span class="opacity-100">Points</span>
            </a>
          </li>
          <li>
            <a href="#" class="flex items
            -center space-x-2">
              <span class="opacity-100">Results</span>
            </a>
          </li>
        </ul>

        <hr class="border-white/5" />
        <div class="flex flex-col space-y-2">
          <p class="opacity-50">
            © {new Date().getFullYear()} Mathematical Analysis
          </p>
          <p class="opacity-20">
            Last updated: {
              new Date().toLocaleDateString("en-US", {
                month: "short",
                day: "2-digit",
                year: "2-digit",
                era: "long",
                dayPeriod: "long",
                calendar: "gregory",
              })
            }
          </p>
        </div>
      </aside>

      <main class="p-12 max-w-4xl flex-grow-0 w-full text-neutral-200">
        <slot />
      </main>
    </div>

    <script>
      const sidebarToggle = document.getElementById("sidebarToggle");
      if (sidebarToggle !== null) {
        sidebarToggle.addEventListener("click", function () {
          const sidebar = document.getElementById("sidebar");
          if (sidebar !== null) {
            if (sidebar.classList.contains("-translate-x-full")) {
              sidebar.classList.remove("-translate-x-full");
              sidebar.classList.add("translate-x-0");
            } else {
              sidebar.classList.remove("translate-x-0");
              sidebar.classList.add("-translate-x-full");
            }
          }
        });
      }

      function dismissSidebarOnScroll() {
        const sidebar = document.getElementById("sidebar");
        if (sidebar && !sidebar.classList.contains("-translate-x-full")) {
          sidebar.classList.add("-translate-x-full");
        }
      }

      function dismissSidebarOnClickOutside(event: MouseEvent) {
        const sidebar = document.getElementById("sidebar");
        const sidebarToggle = document.getElementById("sidebarToggle");
        if (
          sidebar &&
          !sidebar.contains(event.target as Node) &&
          sidebarToggle &&
          !sidebarToggle.contains(event.target as Node)
        ) {
          sidebar.classList.add("-translate-x-full");
        }
      }

      window.addEventListener("DOMContentLoaded", () => {
        document.addEventListener("click", dismissSidebarOnClickOutside);
        window.addEventListener("scroll", dismissSidebarOnScroll, {
          passive: true,
        });
      });
    </script>
  </body>
</html>

<script>
  let keyBuffer = "";
  let keyTimeout: string | number | NodeJS.Timeout | null | undefined = null;

  document.addEventListener("keydown", function (event) {
    const key = event.key; // Get the key pressed
    clearTimeout(keyTimeout as NodeJS.Timeout); // Clear the previous timeout

    if (/^[0-9]$/.test(key)) {
      // Check if the key is a number
      keyBuffer += key; // Append the key to the buffer

      // Define a function to handle navigation
      const navigate = () => {
        if (parseInt(keyBuffer, 10) <= 12) {
          window.location.href = `/lectures/${keyBuffer}/`;
        }
        keyBuffer = ""; // Reset the buffer
      };

      if (key === "1") {
        // Set a timeout only if the key is '1'
        keyTimeout = setTimeout(navigate, 180); // Wait for 180 milliseconds to see if another digit is pressed
      } else {
        // Navigate immediately for keys 2 through 9
        navigate();
      }
    } else {
      // Handle other keys like 'h', 'f', 's'
      switch (key) {
        case "h":
          window.location.href = "/";
          break;
        case "f":
          window.location.href = "/faq/";
          break;
        case "s":
          window.location.href = "/schedule/";
          break;
        case "y":
          window.location.href = "/syllabus/";
          break;
      }
      keyBuffer = ""; // Reset the buffer if a non-numeric key is pressed
    }
  });
</script>
